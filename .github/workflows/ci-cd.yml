name: nodejs microservices CI/CD Pipeline

on:
  push:
    branches:
      - main          # Trigger workflow on push to main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
  
    strategy:
      matrix:
        node-version: [16.x]

    #env:
     # PROJECT_PATH: /nodejs_shopping

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2  

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }} 

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"   

      - name: Build products Backend with NPM
        env:
          APP_SECRET: ${{ secrets.APP_SECRET }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          MSG_QUEUE_URL: ${{ secrets.MSG_QUEUE_URL }}
          EXCHANGE_NAME: ${{ secrets.EXCHANGE_NAME }}
          PORT: ${{ secrets.PORT_PRODUCTS }} 
        run: |  
          cd nodejs_microservice_backend/products 
          touch .env
          echo APP_SECRET=${{ secrets.APP_SECRET }} >> .env
          echo MONGODB_URI=${{ secrets.MONGODB_URI }} >> .env
          echo MSG_QUEUE_URL=${{ secrets.MSG_QUEUE_URL }} >> .env
          echo EXCHANGE_NAME=${{ secrets.EXCHANGE_NAME }} >> .env
          echo PORT=${{ secrets.PORT_PRODUCTS }} >> .env
          cat .env                    
          docker build -t backendproduct .
          docker tag backendproduct:latest ${{ secrets.ecr_repo }}/backendproduct:${{ github.sha }}
      
      - name: Build Frontend with NPM        
        run: |
          cd frontend
          ls
          docker build -t frontend .
          docker tag frontend:latest ${{ secrets.ecr_repo }}/frontend:${{ github.sha }}
          

      - name: Push Docker image to ECR
        run: |
         aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ecr_repo }}     
         docker push ${{ secrets.ecr_repo }}/backendproduct:${{ github.sha }}
         docker push ${{ secrets.ecr_repo }}/frontend:${{ github.sha }}

      - name: Update Kubernetes config
        run: |
          aws eks --region "us-east-1" update-kubeconfig --name "awseks"


      - name: Deply to k8s        
        run: |
          cd k8s
          kubectl apply -f deploymentfrontend.yaml
          kubectl apply -f deploymentproduct.yaml
          kubectl apply -f servicefrontend.yaml
          kubectl apply -f serviceproduct.yaml
          kubectl apply -f ingressfrontend.yaml
      
      - name: completed
        run: |
          echo "Finished"
